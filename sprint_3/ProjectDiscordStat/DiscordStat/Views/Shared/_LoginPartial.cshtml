@using Microsoft.AspNetCore.Identity
<meta Http-Equiv="Cache-Control" Content="no-cache">
<meta Http-Equiv="Pragma" Content="no-cache">
<meta Http-Equiv="Expires" Content="0"> 
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (User.Identity.IsAuthenticated)
{
        
    <li class="nav-item">
        <a class="nav-link text-dark" href="@Url.Action("Account", "Account")">Account</a>
    </li>
    <a class="btn btn-primary" href="@Url.Action("Logout", "Account")" role="button">Logout
        <i class="fab fa-discord"></i>
    </a>
}
else
{
@*    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>*@

<<<<<<< Updated upstream
    <a class="btn btn-primary" href="@Url.Action("Account", "Account")" role="button">Login
        <i class="fab fa-discord"></i>
    </a>
}
</ul>
=======


          
            @if (User.Identity.IsAuthenticated)
            { 
            <ul class="navbar-nav ml-auto">
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("Account", "Account")">Account</a>
                </li>
            </ul>
            <div class="functional-buttons">
                <ul class="navbar-nav ml-auto">            
                    <li>            

                        <a id="logoutButton" onclick="RefreshHeader()" href="@Url.Action("Logout", "Account")">Logout</a>
                    </li>                
                </ul>
            </div>
            }
            else
            {
            <div class="functional-buttons">
                <ul class="navbar-nav ml-auto">                
                    <li>                
                        <a href="@Url.Action("Account", "Account")">Login</a>
                    </li>
                </ul>
            </div>
            }

            <script>
            function RefreshHeader(){

        function preventBack() { window.history.forward(); }
        setTimeout("preventBack()", 0);
        window.onunload = function () { null };

            }
            </script>
>>>>>>> Stashed changes
